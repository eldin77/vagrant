# -*- mode: ruby -*-
# vi: set ft=ruby :

###################################################################################
# Author: Namgon Kim
# Date: 2015. 03. 07
#
# Keepalived + conntrack test
# http://backreference.org/2013/04/03/firewall-ha-with-conntrackd-and-keepalived/
###################################################################################

require "../include/vnode.rb"

###################################################################################
# TODO: SW에 대한 Management Interface 연결 필요: NIC이 8개 이상이어야 가능
# TODO: SSH_PORT를 자동으로 생성해주는 함수 필요(base generator를 만들고
#       alloc_pnat_ssh()를 호출하면 다음 가용한 포트번호 반환

tor_sw      = Node.new("LAN-SW-BRIDGE"	,  (1..7),    2, 2048, 22210)
wan_sw      = Node.new("WAN-SW-BRIDGE"	, (8..14),    2, 2048, 22220)

mster_node  = Node.new("SERVER-MSTER"	, [1, 8], 2, 1024, 22201)
slave_node  = Node.new("SERVER-SLAVE"	, [2, 9], 2, 1024, 22202)
clint_node  = Node.new("CLIENT"		, [3],    2, 1024, 22203)
publc_node  = Node.new("PUBLIC"		, [10],   2, 1024, 22204)

# list of nodes and switches
switches = [ tor_sw, wan_sw ]
nodes    = [ mster_node, slave_node, clint_node, publc_node ]

###################################################################################
# use current directory name as link_prefix 
link_prefix=File.basename(Dir.getwd)

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  
  switches.each do | switch |
    hostname        = switch.get_hostname
    ssh_nat_port    = switch.get_ssh_nat_port
    interfaces      = switch.get_interfaces
    bridged_interface   = switch.get_bridged_interface
    cpu         = switch.get_cpu
    memory      = switch.get_memory

    interface_count = interfaces.length
    if bridged_interface != ""
      interface_count += 1
    end
 
    config.vm.define "#{hostname}" do |cfg_sw|
      cfg_sw.vm.box = "ubuntu/trusty64"
      cfg_sw.vm.boot_timeout = 90

      cfg_sw.ssh.username = "vagrant"
      cfg_sw.ssh.password = "vagrant"
    
      for i in interfaces
        cfg_sw.vm.network "private_network", auto_config: false, virtualbox__intnet: "#{link_prefix}_switch_interface_#{i}"     
      end

      # bridged interface to have external network connectivity
      if bridged_interface != ""
        cfg_sw.vm.network "public_network", auto_config: false, bridge: "#{bridged_interface}"
      end

      # TODO: build a switch image and give a parameter that determines ovs or bridge
      #cfg_sw.vm.provision :shell, :path => "../common/install_openvswitch_of13.sh"
      cfg_sw.vm.provision :shell, :path => "init_node_#{hostname}.sh"
      cfg_sw.vm.provider "virtualbox" do |v|
        # TODO:
        for i in 2..(interface_count + 1)
          # 스위칭에 이용하는 인터페이스에 대해서 promiscuous mode를 allow vms로 설정해줌
      v.customize ["modifyvm", :id, "--nicpromisc#{i}", "allow-all"]                      
    end
    v.customize ["modifyvm", :id, "--hpet", "on"]
    #v.gui = true
    v.memory = memory
    v.cpus = cpu
      end
      cfg_sw.vm.network :forwarded_port, guest: 22, host: "#{ssh_nat_port}", id: "ssh"
    
    end
  end
  
  nodes.each do | node |
    hostname 		= node.get_hostname
    cpu 		    = node.get_cpu
    memory 		    = node.get_memory
    ssh_nat_port 	= node.get_ssh_nat_port
    http_nat_port 	= node.get_http_nat_port
    novnc_nat_port 	= node.get_novnc_nat_port
    interfaces 		= node.get_interfaces

    interface_count	= interfaces.length 
 
    config.vm.define "#{hostname}" do |cfg_node|
      cfg_node.vm.box = "ubuntu/trusty64"
      cfg_node.vm.boot_timeout = 300

      # Run our shell script on provisioning
      cfg_node.vm.provision :shell, :path => "init_node_#{hostname}.sh"
  	
      for i in interfaces
        cfg_node.vm.network "private_network", auto_config: false, virtualbox__intnet: "#{link_prefix}_switch_interface_#{i}"  	
      end
  
      cfg_node.vm.provider "virtualbox" do |v|
        for i in 2..(interface_count+1)
  	  v.customize ["modifyvm", :id, "--nicpromisc#{i}", "allow-all"]  	        	      
      	end
  	v.customize ["modifyvm", :id, "--hpet", "on"]
        #v.gui = true
        v.memory = memory
        v.cpus = cpu
      end  	  
  	   
      cfg_node.vm.network :forwarded_port, guest: 22, host: "#{ssh_nat_port}", id: "ssh"  
      if http_nat_port != -1
        cfg_node.vm.network :forwarded_port, guest: 80, host: "#{http_nat_port}", id: "http"  
      end
      if novnc_nat_port != -1
        cfg_node.vm.network :forwarded_port, guest: 6080, host: "#{novnc_nat_port}", id: "novnc"  
      end

      #cfg_node.vm.synced_folder "../openstack", "/root/openstack", disabled: false
    end
  end
end
